Features to implement:

_ tabs - use bootstrap tabs instead of the old way

_ preview in edit?
  when you edit, all tabs should disappear accept edit and preview
  hitting the preview tab should switch to the preview pane and
  populate it with the result of rendering the current contenst of
  the edit pane.

_ plugins/interface [started]
  _ plugin loading
  _ plugins in config file
  _ sample plugins: abc notation?

_ config file [started]
  x make Front Page, Help configurable
  _ implement page locking (no edit, no delete) as in gitit
  _ command-line option to specify config file? (but what about rest of config dir?)

_ site initialization [started]
  _ explicit 'init' command? or wizard?

_ user logins/accounts
  _ user pages (linked from history)

_ documentation
  _ README
  _ man page produced from README

_ Michael Snoyman suggests that instead of using a static subsite,
  we do something like the following:

   The only recommendation that comes to mind
   would be to put some of the hard-coded static paths used in
   makeDefaultLayout into the HasGitit typeclass, with sensible defaults.
   That would theoretically make it much easier for users to override. In
   the specific case of jQuery, you could use the existing YesodJquery
   class from yesod-form. In general, the approach we take for these kinds
   of typeclasses is to have methods like:
   siteLogo :: master -> Either Text (Route master)
   That way, the user can load the information from the master site
   datatype if desired (which in turn means it can be in a config file),
   and the `Either Text Route` lets the user either specify some external
   URL or a type-safe URL.

   Note: this applies to robots.txt and favicon.ico as well.


